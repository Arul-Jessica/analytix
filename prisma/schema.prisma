// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  firstName     String
  lastName      String
  password      String
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          Role      @default(UNASSIGNED)
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Course {
  id         Int         @id @default(autoincrement())
  regulation Int
  semester   Int
  department String
  totalCount Int
  Coursetag  CourseTag[]
}

model CourseTag {
  id       Int    @id @default(autoincrement())
  Course   Course @relation(fields: [courseId], references: [id])
  courseId Int
  Tag      Tag    @relation(fields: [tagId], references: [id])
  tagId    Int
  count    Int
}

model Tag {
  id          Int            @id @default(autoincrement())
  name        String
  description String
  Parent      TagHierarchy[] @relation("parentTag")
  Child       TagHierarchy[] @relation("childTag")
  Courses     CourseTag[]
}

model TagHierarchy {
  Parent   Tag @relation("parentTag", fields: [parentId], references: [id])
  parentId Int
  Child    Tag @relation("childTag", fields: [childId], references: [id])
  childId  Int

  @@id([parentId, childId])
}

enum Role {
  ADMIN
  PRINCIPAL
  HOD
  DEPT_STAFF
  UNASSIGNED
}
